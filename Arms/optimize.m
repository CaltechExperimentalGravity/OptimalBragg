% Example code for coating optimization
% currently uses optimal ETM coating,
% (which gives 35% transmission at 946nm)
% and optimizes the ITM for 95

addpath(genpath('../lib'));


%x0=[0.25;0.25;0.25;0.25;0.25;0.25;0.25;0.25;0.2961;0.2145;0.2231;0.3519];
%x0=[3/8;1/8;3/8;1/8;3/8;1/8;3/8;1/8;0.2961;0.2145;0.2231;0.3519];
x0=[3/8;1/8;3/8;1/8;3/8;1/8;3/8;1/8;3/8;1/8;3/8;1/8];
x0=[0.4829    0.1617    0.3321    0.1723    0.2723    0.2027    0.2682    0.2095    0.2619    0.2072    0.2625    0.2168]';

global NUMTOOLS

%optimize the ITM
NUMTOOLS.func='optITM';
NUMTOOLS.maxiter=1000;
NUMTOOLS.maxerr=3e-11;
NUMTOOLS.stepsize=1e-6*ones(size(x0));


xout=conjGradSolve(x0);
figure(1);
yi=optITM(xout,1);
%xout'


% leave the undisturbed ETM
% actually, still optimize

x0=[0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.250000000000000
   0.250000000000000
   0.250000000000000
   0.250000000000000
   0.250000000000000
   0.250000000000000
   0.250000000000000
   0.250000000000000];
if 0
x0=[0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000
   0.375000000000000
   0.125000000000000];
end;

NUMTOOLS.func='optETM';
NUMTOOLS.maxiter=100;
NUMTOOLS.maxerr=4e-7;
NUMTOOLS.stepsize=1e-6*ones(size(x0));

xout=conjGradSolve(x0);
figure(2);
ye=optETM(xout,1);

%optimize the PRM
x0=[3/8;1/8;3/8;1/8;3/8;1/8;3/8;1/8;3/8;1/8;3/8;1/8];
x0=[0.372061733433378   0.145261322756028   0.362925538658323   0.140252253001067   0.356812614798907   0.138355149484687 0.355398228792552   0.139785380591801   0.359071442837601   0.144118987096174   0.366826383536828   0.150010226826595]';
NUMTOOLS.func='optPRM';
NUMTOOLS.maxiter=1000;
NUMTOOLS.maxerr=3e-11;
NUMTOOLS.stepsize=1e-6*ones(size(x0));


xout=conjGradSolve(x0);
figure(3);
yp=optPRM(xout,1);
%xout'

%optimize the SRM
x0=[3/8;1/8;3/8;1/8;3/8;1/8;3/8;1/8;3/8;1/8];
x0=[0.407455302762853   0.118707415601558   0.407767087676486   0.123006232220432 0.392632810025760   0.119208005266821   0.392625999368347   0.113034540211701   0.394885605834621   0.097300036500244]';
NUMTOOLS.func='optSRM';
NUMTOOLS.maxiter=1000;
NUMTOOLS.maxerr=2e-10;
NUMTOOLS.stepsize=1e-6*ones(size(x0));

xout=conjGradSolve(x0);
figure(4);
ys=optSRM(xout,1);
%xout'

yi
ye
yp
ys




ArmLoss=75e-6;

for ii=1:length(yi.lambda)
  r1=sqrt(yi.R1(ii));
  r2=sqrt(ye.R1(ii)-ArmLoss);  
  f0=(1-r1*r2)*1/(2*pi*r1*r2);
  Finesse=1/(2*f0);
  Fin(ii)=Finesse;
end
disp(['Finesse at 946nm: ',num2str(Fin(3))]);

